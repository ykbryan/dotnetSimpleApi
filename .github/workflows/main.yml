# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish
        run: dotnet publish ./dotnetSimpleApi.csproj -c release -o ./web/
      - name: Zip
        run: cd ./web && zip -r ../web.zip *
      - name: Get Timestamp Action
        # You may pin to the exact commit or the version.
        # uses: nanzm/get-time-action@5fb6a88787f272aeb246a10ebb8fabeb5f3c7b9c
        id: version
        uses: nanzm/get-time-action@v1.1
        with:
          # time zone
          timeZone: 8
          # timestamp format
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Beanstalk Deploy
        # You may pin to the exact commit or the version.
        # uses: einaregilsson/beanstalk-deploy@6f594ded1b0a22c5e5aa1088e7c58dc5816c92ea
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          # AWS Access Key
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          # AWS Secret Key
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          # AWS Region
          region: ${{ secrets.AWS_REGION }}
          # Beanstalk application name
          application_name: wistech-environment
          # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
          environment_name: wistech-staging
          # Version label for new Beanstalk version
          version_label: ${{ steps.version.outputs.time }}
          # Zip file with the version to deploy. If skipped the action will deploy existing version.
          deployment_package: web.zip
